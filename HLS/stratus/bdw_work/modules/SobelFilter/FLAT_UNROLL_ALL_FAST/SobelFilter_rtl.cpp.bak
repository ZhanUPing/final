// Generated by stratus_hls 21.20-p100  (96289.240513)
// Wed May 31 01:00:05 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_avg_busy("o_avg_busy")
    ,o_avg_vld("o_avg_vld")
    ,o_avg_data("o_avg_data")
    ,o_avg_m_req_m_prev_trig_req("o_avg_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_avg_m_unacked_req("o_avg_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_N_Muxb_1_2_0_4_4_out1("SobelFilter_N_Muxb_1_2_0_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_102_gdiv("SobelFilter_gen_busy_r_4_102_gdiv")
    ,SobelFilter_gen_busy_r_4_102_gnew_req("SobelFilter_gen_busy_r_4_102_gnew_req")
    ,global_state_next("global_state_next")
    ,SobelFilter_Add_32Ux32U_32U_1_70_in2("SobelFilter_Add_32Ux32U_32U_1_70_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_68_out1("SobelFilter_Add_32Ux32U_32U_1_68_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_68_in1("SobelFilter_Add_32Ux32U_32U_1_68_in1")
    ,SobelFilter_Add_32Ux32U_32U_1_68_in2("SobelFilter_Add_32Ux32U_32U_1_68_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_66_out1("SobelFilter_Add_32Ux32U_32U_1_66_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_65_out1("SobelFilter_Add_32Ux32U_32U_1_65_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_65_in1("SobelFilter_Add_32Ux32U_32U_1_65_in1")
    ,SobelFilter_Add_32Ux32U_32U_1_65_in2("SobelFilter_Add_32Ux32U_32U_1_65_in2")
    ,SobelFilter_Mul_32Sx6S_32S_4_37_out1("SobelFilter_Mul_32Sx6S_32S_4_37_out1")
    ,SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_37_in2("SobelFilter_Mul_32Sx6S_32S_4_37_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_36_out1("SobelFilter_Add_32Ux32U_32U_1_36_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_36_in1("SobelFilter_Add_32Ux32U_32U_1_36_in1")
    ,SobelFilter_Add_32Ux32U_32U_1_36_in2("SobelFilter_Add_32Ux32U_32U_1_36_in2")
    ,SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_35_in2("SobelFilter_Mul_32Sx6S_32S_4_35_in2")
    ,SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice("SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice")
    ,SobelFilter_Mul_32Sx4S_32S_4_34_in2("SobelFilter_Mul_32Sx4S_32S_4_34_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_33_in2_slice("SobelFilter_Add_32Ux32U_32U_1_33_in2_slice")
    ,SobelFilter_Mul_32Sx4U_32S_4_32_in2("SobelFilter_Mul_32Sx4U_32S_4_32_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_31_out1("SobelFilter_Add_32Ux32U_32U_4_31_out1")
    ,SobelFilter_Mul_32Sx3U_32S_4_29_out1("SobelFilter_Mul_32Sx3U_32S_4_29_out1")
    ,SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice("SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice")
    ,SobelFilter_Mul_32Sx3U_32S_4_29_in2("SobelFilter_Mul_32Sx3U_32S_4_29_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_28_out1("SobelFilter_Add_32Ux32U_32U_4_28_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_28_in1("SobelFilter_Add_32Ux32U_32U_4_28_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_28_in2("SobelFilter_Add_32Ux32U_32U_4_28_in2")
    ,SobelFilter_Mul_32Sx6S_32S_4_27_out1("SobelFilter_Mul_32Sx6S_32S_4_27_out1")
    ,SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_27_in2("SobelFilter_Mul_32Sx6S_32S_4_27_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_25_out1("SobelFilter_Add_32Ux32U_32U_1_25_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_25_in1("SobelFilter_Add_32Ux32U_32U_1_25_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_49_out1("SobelFilter_Add_32Ux32U_32U_4_49_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_25_in2("SobelFilter_Add_32Ux32U_32U_1_25_in2")
    ,SobelFilter_Mul_32Sx6S_32S_4_24_out1("SobelFilter_Mul_32Sx6S_32S_4_24_out1")
    ,SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_24_in2("SobelFilter_Mul_32Sx6S_32S_4_24_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_23_out1("SobelFilter_Add_32Ux32U_32U_4_23_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_23_in1("SobelFilter_Add_32Ux32U_32U_4_23_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_23_in2("SobelFilter_Add_32Ux32U_32U_4_23_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_22_out1("SobelFilter_Add_32Ux32U_32U_4_22_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_22_in1("SobelFilter_Add_32Ux32U_32U_4_22_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_26_out1("SobelFilter_Add_32Ux32U_32U_4_26_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_22_in2("SobelFilter_Add_32Ux32U_32U_4_22_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_21_out1("SobelFilter_Add_32Ux32U_32U_4_21_out1")
    ,SobelFilter_Minus_32S_32S_4_20_out1("SobelFilter_Minus_32S_32S_4_20_out1")
    ,SobelFilter_Minus_32S_32S_4_20_in1("SobelFilter_Minus_32S_32S_4_20_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_19_in1("SobelFilter_Add_32Ux32U_32U_4_19_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_19_in2("SobelFilter_Add_32Ux32U_32U_4_19_in2")
    ,SobelFilter_Mul_32Sx4S_32S_4_34_out1("SobelFilter_Mul_32Sx4S_32S_4_34_out1")
    ,SobelFilter_Minus_32S_32S_4_18_out1("SobelFilter_Minus_32S_32S_4_18_out1")
    ,SobelFilter_Minus_32S_32S_4_18_in1("SobelFilter_Minus_32S_32S_4_18_in1")
    ,SobelFilter_Mul_32Sx6S_32S_4_17_out1("SobelFilter_Mul_32Sx6S_32S_4_17_out1")
    ,SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_17_in2("SobelFilter_Mul_32Sx6S_32S_4_17_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_16_out1("SobelFilter_Add_32Ux32U_32U_4_16_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_16_in1("SobelFilter_Add_32Ux32U_32U_4_16_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_16_in2("SobelFilter_Add_32Ux32U_32U_4_16_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_15_out1("SobelFilter_Add_32Ux32U_32U_4_15_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_15_in1("SobelFilter_Add_32Ux32U_32U_4_15_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_15_in2("SobelFilter_Add_32Ux32U_32U_4_15_in2")
    ,gs_ctrl_do_filter_h6("gs_ctrl_do_filter_h6")
    ,SobelFilter_Minus_32S_32S_4_14_out1("SobelFilter_Minus_32S_32S_4_14_out1")
    ,SobelFilter_Minus_32S_32S_4_14_in1("SobelFilter_Minus_32S_32S_4_14_in1")
    ,SobelFilter_Mul_32Sx2U_32S_4_13_out1("SobelFilter_Mul_32Sx2U_32S_4_13_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_12_out1("SobelFilter_Add_32Ux32U_32U_4_12_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_12_in1("SobelFilter_Add_32Ux32U_32U_4_12_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_19_out1("SobelFilter_Add_32Ux32U_32U_4_19_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_12_in2("SobelFilter_Add_32Ux32U_32U_4_12_in2")
    ,gs_ctrl_do_filter_h4("gs_ctrl_do_filter_h4")
    ,SobelFilter_Add_32Ux32U_32U_4_11_out1("SobelFilter_Add_32Ux32U_32U_4_11_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_11_in2("SobelFilter_Add_32Ux32U_32U_4_11_in2")
    ,SobelFilter_Minus_32S_32S_4_10_in1("SobelFilter_Minus_32S_32S_4_10_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_9_out1("SobelFilter_Add_32Ux32U_32U_4_9_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_9_in2("SobelFilter_Add_32Ux32U_32U_4_9_in2")
    ,SobelFilter_Minus_32S_32S_4_8_out1("SobelFilter_Minus_32S_32S_4_8_out1")
    ,SobelFilter_Minus_32S_32S_4_8_in1("SobelFilter_Minus_32S_32S_4_8_in1")
    ,SobelFilter_Minus_32S_32S_1_7_out1("SobelFilter_Minus_32S_32S_1_7_out1")
    ,SobelFilter_Minus_32S_32S_1_7_in1("SobelFilter_Minus_32S_32S_1_7_in1")
    ,SobelFilter_Mul_32Sx7U_32S_4_6_out1("SobelFilter_Mul_32Sx7U_32S_4_6_out1")
    ,SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice("SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice")
    ,gs_ctrl_do_filter_h2("gs_ctrl_do_filter_h2")
    ,SobelFilter_Mul_32Sx7U_32S_4_6_in2("SobelFilter_Mul_32Sx7U_32S_4_6_in2")
    ,s_reg_9_slice("s_reg_9_slice")
    ,SobelFilter_Mul_32Sx7U_32S_4_39_out1("SobelFilter_Mul_32Sx7U_32S_4_39_out1")
    ,s_reg_87("s_reg_87")
    ,SobelFilter_Minus_32S_32S_4_10_out1("SobelFilter_Minus_32S_32S_4_10_out1")
    ,SobelFilter_Add_32Ux32U_32U_1_38_out1("SobelFilter_Add_32Ux32U_32U_1_38_out1")
    ,s_reg_86("s_reg_86")
    ,SobelFilter_Add_32Ux32U_32U_1_33_out1("SobelFilter_Add_32Ux32U_32U_1_33_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_30_out1("SobelFilter_Add_32Ux32U_32U_4_30_out1")
    ,s_reg_7_slice("s_reg_7_slice")
    ,s_reg_56("s_reg_56")
    ,s_reg_80("s_reg_80")
    ,SobelFilter_Mul_32Sx6S_32S_4_35_out1("SobelFilter_Mul_32Sx6S_32S_4_35_out1")
    ,s_reg_53("s_reg_53")
    ,s_reg_52("s_reg_52")
    ,s_reg_50("s_reg_50")
    ,s_reg_8("s_reg_8")
    ,s_reg_5("s_reg_5")
    ,s_reg_57("s_reg_57")
    ,s_reg_51("s_reg_51")
    ,s_reg_48("s_reg_48")
    ,s_reg_55("s_reg_55")
    ,s_reg_49("s_reg_49")
    ,s_reg_47("s_reg_47")
    ,s_reg_45("s_reg_45")
    ,s_reg_43("s_reg_43")
    ,s_reg_46("s_reg_46")
    ,s_reg_42("s_reg_42")
    ,s_reg_44("s_reg_44")
    ,s_reg_41("s_reg_41")
    ,s_reg_6("s_reg_6")
    ,s_reg_4("s_reg_4")
    ,s_reg_58("s_reg_58")
    ,s_reg_40("s_reg_40")
    ,s_reg_39("s_reg_39")
    ,s_reg_38("s_reg_38")
    ,s_reg_37("s_reg_37")
    ,s_reg_36("s_reg_36")
    ,s_reg_35("s_reg_35")
    ,s_reg_34("s_reg_34")
    ,s_reg_33("s_reg_33")
    ,s_reg_32("s_reg_32")
    ,s_reg_31("s_reg_31")
    ,s_reg_30("s_reg_30")
    ,s_reg_29("s_reg_29")
    ,s_reg_28("s_reg_28")
    ,s_reg_27("s_reg_27")
    ,s_reg_26("s_reg_26")
    ,s_reg_59("s_reg_59")
    ,s_reg_25("s_reg_25")
    ,s_reg_22("s_reg_22")
    ,s_reg_24("s_reg_24")
    ,s_reg_21("s_reg_21")
    ,s_reg_23("s_reg_23")
    ,s_reg_18("s_reg_18")
    ,s_reg_20("s_reg_20")
    ,s_reg_19("s_reg_19")
    ,s_reg_16("s_reg_16")
    ,s_reg_17("s_reg_17")
    ,s_reg_15("s_reg_15")
    ,s_reg_60("s_reg_60")
    ,s_reg_14("s_reg_14")
    ,s_reg_13("s_reg_13")
    ,s_reg_11("s_reg_11")
    ,s_reg_12("s_reg_12")
    ,s_reg_10("s_reg_10")
    ,SobelFilter_gen_busy_r_4_102_out1("SobelFilter_gen_busy_r_4_102_out1")
    ,SobelFilter_And_1Ux1U_1U_4_100_out1("SobelFilter_And_1Ux1U_1U_4_100_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_avg_m_req_m_trig_req("o_avg_m_req_m_trig_req")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_Add_32Ux32U_32U_1_70_out1("SobelFilter_Add_32Ux32U_32U_1_70_out1")
    ,SobelFilter_Mul_32Sx4U_32S_4_32_out1("SobelFilter_Mul_32Sx4U_32S_4_32_out1")
    ,global_state("global_state")
    ,stall0("stall0")
{
  SC_METHOD(drive_o_avg_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_avg_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_102_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_100_out1 );

  SC_METHOD(drive_s_reg_10);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_11);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_13);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_14);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_16);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_19);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_20);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_21);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_23);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_30);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_34);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_35);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_36);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_37);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_38);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_39);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_40);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_41);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_42);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_43);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_44);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_45);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_46);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_47);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_48);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_49);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_50);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_51);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_52);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_53);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_55);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_56);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_57);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_58);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_59);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_60);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_7_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_8);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_86);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_87);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_SobelFilter_Mul_32Sx7U_32S_4_6_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_4 );
  sensitive << ( s_reg_29 );
  sensitive << ( s_reg_45 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2 );

  SC_METHOD(SobelFilter_Mul_32Sx7U_32S_4_6);
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_6_in2 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_1_7_in1);
  sensitive << ( global_state );
  sensitive << ( s_reg_5 );
  sensitive << ( s_reg_17 );
  sensitive << ( s_reg_53 );

  SC_METHOD(SobelFilter_Minus_32S_32S_1_7);
  sensitive << ( SobelFilter_Minus_32S_32S_1_7_in1 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_8_in1);
  sensitive << ( global_state );
  sensitive << ( s_reg_6 );
  sensitive << ( s_reg_36 );
  sensitive << ( s_reg_51 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_8);
  sensitive << ( SobelFilter_Minus_32S_32S_4_8_in1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_9_in2);
  sensitive << ( s_reg_7_slice );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_9);
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_6_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_9_in2 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_10_in1);
  sensitive << ( global_state );
  sensitive << ( s_reg_8 );
  sensitive << ( s_reg_41 );
  sensitive << ( s_reg_55 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_10);
  sensitive << ( SobelFilter_Minus_32S_32S_4_10_in1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_11_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_80 );
  sensitive << ( s_reg_9_slice );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_11);
  sensitive << ( SobelFilter_Minus_32S_32S_1_7_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_11_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_12_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_6_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_9_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_12_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_19_out1 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_8_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_12);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_12_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_12_in2 );

  SC_METHOD(SobelFilter_Mul_32Sx2U_32S_4_13);
  sensitive << ( s_reg_10 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_14_in1);
  sensitive << ( s_reg_11 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_14);
  sensitive << ( SobelFilter_Minus_32S_32S_4_14_in1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_15_in2);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( o_avg_data );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_11_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_15_in1);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Minus_32S_32S_4_10_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_11_out1 );
  sensitive << ( s_reg_86 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_15);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_15_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_15_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_16_in2);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_35_out1 );
  sensitive << ( SobelFilter_Mul_32Sx2U_32S_4_13_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_16_in1);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_12_out1 );
  sensitive << ( s_reg_86 );
  sensitive << ( s_reg_80 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_16);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_16_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_16_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_17_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_12 );
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_37 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice);
  sensitive << ( global_state );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_17);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_17_in2 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_18_in1);
  sensitive << ( global_state );
  sensitive << ( s_reg_13 );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_48 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_18);
  sensitive << ( SobelFilter_Minus_32S_32S_4_18_in1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_19_in2);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_15_out1 );
  sensitive << ( s_reg_52 );
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_34_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_19_in1);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_15_out1 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_14_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_19);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_19_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_19_in2 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_20_in1);
  sensitive << ( global_state );
  sensitive << ( s_reg_14 );
  sensitive << ( s_reg_30 );
  sensitive << ( s_reg_57 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_20);
  sensitive << ( SobelFilter_Minus_32S_32S_4_20_in1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_21);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_16_out1 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_17_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_22_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( s_reg_42 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_19_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_22_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_26_out1 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_18_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_22);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_22_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_22_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_23_in2);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_21_out1 );
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_6_out1 );
  sensitive << ( s_reg_58 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_23_in1);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_21_out1 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_20_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_23);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_23_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_23_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_24_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_31 );
  sensitive << ( s_reg_43 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2 );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_24);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_24_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_25_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_16 );
  sensitive << ( SobelFilter_Mul_32Sx7U_32S_4_39_out1 );
  sensitive << ( s_reg_46 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_25_in1);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_49_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_22_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_25);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_25_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_25_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_26);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_23_out1 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_24_out1 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_27_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_33 );
  sensitive << ( s_reg_17 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2 );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_27);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_27_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_28_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_12_out1 );
  sensitive << ( s_reg_19 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_28_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_10_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_25_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_28);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_28_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_28_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx3U_32S_4_29_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_18 );
  sensitive << ( s_reg_40 );
  sensitive << ( s_reg_50 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h4 );

  SC_METHOD(SobelFilter_Mul_32Sx3U_32S_4_29);
  sensitive << ( SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx3U_32S_4_29_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_30);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_26_out1 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_27_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_31);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_28_out1 );
  sensitive << ( SobelFilter_Mul_32Sx3U_32S_4_29_out1 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx4U_32S_4_32_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_34 );
  sensitive << ( s_reg_21 );

  SC_METHOD(SobelFilter_Mul_32Sx4U_32S_4_32);
  sensitive << ( SobelFilter_Mul_32Sx4U_32S_4_32_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_33_in2_slice);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( s_reg_52 );
  sensitive << ( s_reg_23 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_33);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_31_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_33_in2_slice );

  SC_METHOD(drive_SobelFilter_Mul_32Sx4S_32S_4_34_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_22 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_44 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h4 );

  SC_METHOD(SobelFilter_Mul_32Sx4S_32S_4_34);
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_34_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_35_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_35 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice);
  sensitive << ( global_state );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_35);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_35_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_36_in2);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_25_out1 );
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_34_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_36_in1);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_20_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_33_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_36);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_36_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_36_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_37_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_32 );
  sensitive << ( s_reg_25 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2 );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_37);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_37_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_38);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_36_out1 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_37_out1 );

  SC_METHOD(SobelFilter_Mul_32Sx7U_32S_4_39);
  sensitive << ( s_reg_28 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_49);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_22_out1 );
  sensitive << ( s_reg_87 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_65_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_36_out1 );
  sensitive << ( SobelFilter_Mul_32Sx4U_32S_4_32_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_65_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_18_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_38_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_65);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_65_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_65_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_66);
  sensitive << ( SobelFilter_Minus_32S_32S_4_8_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_65_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_68_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_66_out1 );
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_34_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_68_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Minus_32S_32S_1_7_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_66_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_68);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_68_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_68_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_70_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_33_out1 );
  sensitive << ( SobelFilter_Mul_32Sx3U_32S_4_29_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_70);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_68_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_70_in2 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );

  SC_METHOD(drive_gs_ctrl_do_filter_h2);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_102_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_102_p7);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_102_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_102_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_102_p6);
  sensitive << ( SobelFilter_gen_busy_r_4_102_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_102_p5);
  sensitive << ( SobelFilter_gen_busy_r_4_102_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_102_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_0_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_avg_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_avg_m_unacked_req );

  SC_METHOD(drive_o_avg_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_100);
  sensitive << ( o_avg_vld );
  sensitive << ( o_avg_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_avg_m_req_m_prev_trig_req );
  sensitive << ( o_avg_m_req_m_trig_req );

  SC_METHOD(drive_o_avg_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_avg_m_req_m_trig_req );

}
// resource: mux_32bx2i0c
// resource: regr_en_32
void SobelFilter::drive_o_avg_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 0ULL: case 3ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Mul_32Sx4U_32S_4_32_out1.read());
      break;
    case 1ULL: case 2ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_1_70_out1.read())
      ;
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        i_rgb_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        i_rgb_m_busy_req_0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void SobelFilter::drive_o_avg_m_req_m_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 2ULL: 
        o_avg_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                 .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_102_out1.read();
    break;
  case 3ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_100_out1.read();
    break;
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_10(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_10 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_10 = s_reg_12.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_11(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_11 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_11 = s_reg_13.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_12(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_12 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_12 = s_reg_14.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_13(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_13 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_13 = s_reg_60.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_14(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_14 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_14 = s_reg_15.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_15(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_15 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_15 = s_reg_17.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_16(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_16 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_16 = s_reg_19.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_17(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_17 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_17 = s_reg_20.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_18(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_18 = s_reg_23.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_19(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_19 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_19 = s_reg_18.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_20(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_20 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_20 = s_reg_21.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_21(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_21 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_21 = s_reg_24.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_22(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_22 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_22 = s_reg_25.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_23(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_23 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_23 = s_reg_59.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_24(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_24 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_24 = s_reg_26.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_25(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_25 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_25 = s_reg_27.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_26(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_26 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_26 = s_reg_28.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_27(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_27 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_27 = s_reg_29.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_28(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_28 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_28 = s_reg_30.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_29(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_29 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_29 = s_reg_31.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_30(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_30 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_30 = s_reg_32.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_31(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_31 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_31 = s_reg_33.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_32(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_32 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_32 = s_reg_34.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_33(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_33 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_33 = s_reg_35.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_34(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_34 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_34 = s_reg_36.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_35(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_35 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_35 = s_reg_37.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_36(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_36 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_36 = s_reg_38.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_37(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_37 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_37 = s_reg_39.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_38(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_38 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_38 = s_reg_40.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_39(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_39 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_39 = s_reg_58.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_4(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_4 = s_reg_6.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_40(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_40 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_40 = s_reg_41.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_41(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_41 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_41 = s_reg_44.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_42(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_42 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_42 = s_reg_46.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_43(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_43 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_43 = s_reg_42.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_44(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_44 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_44 = s_reg_45.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_45(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_45 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_45 = s_reg_47.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_46(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_46 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_46 = s_reg_49.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_47(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_47 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_47 = s_reg_55.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_48(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_48 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_48 = s_reg_51.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_49(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_49 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_49 = s_reg_57.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_5(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_5 = s_reg_8.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_50(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_50 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_50 = s_reg_52.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_51(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_51 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_51 = s_reg_53.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_52(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_52 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_52 = (sc_uint<32> ) (SobelFilter_Mul_32Sx6S_32S_4_35_out1.read());
        break;
      case 1ULL: 
        s_reg_52 = i_rgb_data.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_53(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_53 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_53 = s_reg_80.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_55(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_55 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_55 = s_reg_50.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_56(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_56 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_56 = s_reg_10.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_57(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_57 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_57 = s_reg_48.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_58(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_58 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_58 = s_reg_43.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_59(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_59 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_59 = s_reg_22.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_6(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_6 = s_reg_56.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_60(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_60 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_60 = s_reg_16.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_31
void SobelFilter::drive_s_reg_7_slice(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_7_slice = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_7_slice = (sc_uint<31> )s_reg_4.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_8(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_8 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_8 = s_reg_11.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_80(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 1ULL: case 3ULL: 
        s_reg_80 = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_4_30_out1.read())
        ;
        break;
      case 2ULL: 
        s_reg_80 = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_1_33_out1.read())
        ;
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_32
void SobelFilter::drive_s_reg_86(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 0ULL: case 3ULL: 
      s_reg_86 = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_1_38_out1.read());
      break;
    case 1ULL: 
      s_reg_86 = (sc_uint<32> ) (SobelFilter_Minus_32S_32S_4_10_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_87(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 0ULL: case 3ULL: 
      s_reg_87 = (sc_uint<32> ) (SobelFilter_Mul_32Sx7U_32S_4_39_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_sc_31
void SobelFilter::drive_s_reg_9_slice(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_9_slice = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_9_slice = (sc_uint<31> )s_reg_5.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx7U_32S_4_6_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7U_32S_4_6_in2 = (sc_int<32> ) (s_reg_4.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7U_32S_4_6_in2 = (sc_int<32> ) (s_reg_29.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7U_32S_4_6_in2 = (sc_int<32> ) (s_reg_45.read());
    break;
  }
}
// resource: mux_4bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice = 14ULL;
  } else {
    SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice = 1ULL;
  }
}
// resource: SobelFilter_Mul_32Sx7U_32S_4  instance: SobelFilter_Mul_32Sx7U_32S_4_6
void SobelFilter::SobelFilter_Mul_32Sx7U_32S_4_6(){
  SobelFilter_Mul_32Sx7U_32S_4_6_out1 = (/*cliff*/sc_int<32>)
                                        SobelFilter_Mul_32Sx7U_32S_4_6_in2
                                        .read() * ( (sc_uint<7> )(sc_bv<7>)(
                                        (sc_bv<2>)(((/*imp*/sc_uint<2> ) 
                                        SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice
                                        .read().range(3,2))), 
                                        (sc_bv<5>)(( (sc_uint<5> )(sc_bv<5>)(
                                        (sc_bv<2>)(0ULL), 
                                        (sc_bv<3>)(( (sc_uint<3> )(sc_bv<3>)(
                                        (sc_bv<1>)(((/*imp*/sc_uint<1> ) 
                                        SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice
                                        .read().range(1,1))), 
                                        (sc_bv<2>)(( (sc_uint<2> )(sc_bv<2>)(
                                        (sc_bv<1>)(1ULL), 
                                        (sc_bv<1>)(((/*imp*/sc_uint<1> ) 
                                        SobelFilter_Mul_32Sx7U_32S_4_6_in1_slice
                                        .read().range(0,0)))) ))) ))) ))) );
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_1_7_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_1_7_in1 = (sc_int<32> ) (s_reg_5.read());
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_1_7_in1 = (sc_int<32> ) (s_reg_17.read());
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_1_7_in1 = (sc_int<32> ) (s_reg_53.read());
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_1  instance: SobelFilter_Minus_32S_32S_1_7
void SobelFilter::SobelFilter_Minus_32S_32S_1_7(){
  SobelFilter_Minus_32S_32S_1_7_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                       SobelFilter_Minus_32S_32S_1_7_in1.read())
  ;
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_8_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_4_8_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                        (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                        s_reg_6.read()), 
                                        (sc_bv<1>)(0ULL)) ));
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_4_8_in1 = (sc_int<32> ) (s_reg_36.read());
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_4_8_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                        (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                        s_reg_51.read()), 
                                        (sc_bv<1>)(0ULL)) ));
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_8
void SobelFilter::SobelFilter_Minus_32S_32S_4_8(){
  SobelFilter_Minus_32S_32S_4_8_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                       SobelFilter_Minus_32S_32S_4_8_in1.read())
  ;
}
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_9_in2(){
  SobelFilter_Add_32Ux32U_32U_4_9_in2 = ( (sc_uint<32> )(sc_bv<32>)((sc_bv<31>)(
                                        (sc_int<31> )s_reg_7_slice.read()), 
                                        (sc_bv<1>)(0ULL)) );
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_9
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_9(){
  SobelFilter_Add_32Ux32U_32U_4_9_out1 = (/*cliff*/sc_uint<32>)(
                                         SobelFilter_Add_32Ux32U_32U_4_9_in2
                                         .read() + (sc_uint<32> )
                                         SobelFilter_Mul_32Sx7U_32S_4_6_out1
                                         .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_10_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_4_10_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                         (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                         s_reg_8.read()), 
                                         (sc_bv<1>)(0ULL)) ));
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_4_10_in1 = (sc_int<32> ) (s_reg_41.read());
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_4_10_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                         (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                         s_reg_55.read()), 
                                         (sc_bv<1>)(0ULL)) ));
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_10
void SobelFilter::SobelFilter_Minus_32S_32S_4_10(){
  SobelFilter_Minus_32S_32S_4_10_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                        SobelFilter_Minus_32S_32S_4_10_in1
                                        .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_11_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_11_in2 = (sc_uint<32> ) (s_reg_80.read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_11_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<31>)((sc_int<31> )
                                           s_reg_9_slice.read()), 
                                           (sc_bv<1>)(0ULL)) );
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_11
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_11(){
  SobelFilter_Add_32Ux32U_32U_4_11_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_11_in2
                                          .read() + (sc_uint<32> )
                                          SobelFilter_Minus_32S_32S_1_7_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_12_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_12_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx7U_32S_4_6_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_12_in2 = SobelFilter_Add_32Ux32U_32U_4_9_out1
                                           .read();
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_12_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_12_in1 = SobelFilter_Add_32Ux32U_32U_4_19_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_12_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_8_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_12
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_12(){
  SobelFilter_Add_32Ux32U_32U_4_12_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_12_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_12_in1
                                          .read());
}
// resource: SobelFilter_Mul_32Sx2U_32S_4  instance: SobelFilter_Mul_32Sx2U_32S_4_13
void SobelFilter::SobelFilter_Mul_32Sx2U_32S_4_13(){
  SobelFilter_Mul_32Sx2U_32S_4_13_out1 = (/*cliff*/sc_int<32>)(sc_int<32> )
                                         s_reg_10.read() * 3ULL;
}
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_14_in1(){
  SobelFilter_Minus_32S_32S_4_14_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                       (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                       s_reg_11.read()), 
                                       (sc_bv<1>)(0ULL)) ));
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_14
void SobelFilter::SobelFilter_Minus_32S_32S_4_14(){
  SobelFilter_Minus_32S_32S_4_14_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                        SobelFilter_Minus_32S_32S_4_14_in1
                                        .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_15_in2(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_15_in2 = (sc_uint<32> ) (o_avg_data.read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_15_in2 = SobelFilter_Add_32Ux32U_32U_4_11_out1
                                           .read();
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_15_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_4_15_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_10_out1
                                           .read());
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_4_15_in1 = SobelFilter_Add_32Ux32U_32U_4_11_out1
                                           .read();
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_4_15_in1 = (sc_uint<32> ) (s_reg_86.read());
    break;
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_15
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_15(){
  SobelFilter_Add_32Ux32U_32U_4_15_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_15_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_15_in1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_16_in2(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_16_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx6S_32S_4_35_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_16_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx2U_32S_4_13_out1
                                           .read());
  }
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_16_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_4_16_in1 = SobelFilter_Add_32Ux32U_32U_4_12_out1
                                           .read();
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_4_16_in1 = (sc_uint<32> ) (s_reg_86.read());
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_4_16_in1 = (sc_uint<32> ) (s_reg_80.read());
    break;
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_16
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_16(){
  SobelFilter_Add_32Ux32U_32U_4_16_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_16_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_16_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_17_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_17_in2 = (sc_int<32> ) (s_reg_12.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_17_in2 = (sc_int<32> ) (s_reg_27.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_17_in2 = (sc_int<32> ) (s_reg_37.read());
    break;
  }
}
// resource: mux_4bx3i3c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice = -3LL;
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice = 0LL;
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice = -5LL;
    break;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_17
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_17(){
  SobelFilter_Mul_32Sx6S_32S_4_17_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_17_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                         (sc_bv<1>)(((/*imp*/sc_int<1> ) SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice
                                         .read().range(3,3))), 
                                         (sc_bv<4>)(( (sc_int<4> )(sc_bv<4>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<3>)(((/*imp*/sc_int<3> ) SobelFilter_Mul_32Sx6S_32S_4_17_in1_slice
                                         .read().range(2,0)))) ))) ))) );
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_18_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_4_18_in1 = (sc_int<32> ) (s_reg_13.read());
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_4_18_in1 = (sc_int<32> ) (s_reg_24.read());
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_4_18_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                         (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                         s_reg_48.read()), 
                                         (sc_bv<1>)(0ULL)) ));
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_18
void SobelFilter::SobelFilter_Minus_32S_32S_4_18(){
  SobelFilter_Minus_32S_32S_4_18_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                        SobelFilter_Minus_32S_32S_4_18_in1
                                        .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_19_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_4_19_in2 = SobelFilter_Add_32Ux32U_32U_4_15_out1
                                           .read();
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_4_19_in2 = (sc_uint<32> ) (s_reg_52.read());
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_4_19_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx4S_32S_4_34_out1
                                           .read());
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_19_in1(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_19_in1 = SobelFilter_Add_32Ux32U_32U_4_15_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_19_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_14_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_19
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_19(){
  SobelFilter_Add_32Ux32U_32U_4_19_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_19_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_19_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_20_in1(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_4_20_in1 = (sc_int<32> ) (s_reg_14.read());
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_4_20_in1 = (sc_int<32> ) (s_reg_30.read());
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_4_20_in1 = (sc_int<32> ) (s_reg_57.read());
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_20
void SobelFilter::SobelFilter_Minus_32S_32S_4_20(){
  SobelFilter_Minus_32S_32S_4_20_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                        SobelFilter_Minus_32S_32S_4_20_in1
                                        .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_21
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_21(){
  SobelFilter_Add_32Ux32U_32U_4_21_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx6S_32S_4_17_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_16_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_22_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_22_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<30>)((sc_int<30> )s_reg_42
                                           .read()), 
                                           (sc_bv<2>)(0ULL)) );
  } else {
    SobelFilter_Add_32Ux32U_32U_4_22_in2 = SobelFilter_Add_32Ux32U_32U_4_19_out1
                                           .read();
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_22_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_22_in1 = SobelFilter_Add_32Ux32U_32U_4_26_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_22_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_18_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_22
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_22(){
  SobelFilter_Add_32Ux32U_32U_4_22_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_22_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_22_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_23_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_4_23_in2 = SobelFilter_Add_32Ux32U_32U_4_21_out1
                                           .read();
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_4_23_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx7U_32S_4_6_out1
                                           .read());
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_4_23_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<30>)((sc_int<30> )s_reg_58
                                           .read()), 
                                           (sc_bv<2>)(0ULL)) );
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_23_in1(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_23_in1 = SobelFilter_Add_32Ux32U_32U_4_21_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_23_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_20_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_23
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_23(){
  SobelFilter_Add_32Ux32U_32U_4_23_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_23_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_23_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_24_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_24_in2 = (sc_int<32> ) (s_reg_15.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_24_in2 = (sc_int<32> ) (s_reg_31.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_24_in2 = (sc_int<32> ) (s_reg_43.read());
    break;
  }
}
// resource: mux_3bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice = -4LL;
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice = 3LL;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_24
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_24(){
  SobelFilter_Mul_32Sx6S_32S_4_24_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_24_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<1>)((sc_int<1> )(((/*imp*/
                                         sc_int<1> ) SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice
                                         .read().range(2,2)))), 
                                         (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                         (sc_bv<1>)(0ULL), 
                                         (sc_bv<4>)(( (sc_int<4> )(sc_bv<4>)(
                                         (sc_bv<2>)(((/*imp*/sc_int<2> ) SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice
                                         .read().range(2,1))), 
                                         (sc_bv<2>)(( (sc_int<2> )(sc_bv<2>)(
                                         (sc_bv<1>)(0ULL), 
                                         (sc_bv<1>)(((/*imp*/sc_int<1> ) SobelFilter_Mul_32Sx6S_32S_4_24_in1_slice
                                         .read().range(0,0)))) ))) ))) ))) );
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_25_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_1_25_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<31>)((sc_int<31> )s_reg_16
                                           .read()), 
                                           (sc_bv<1>)(0ULL)) );
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_1_25_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx7U_32S_4_39_out1
                                           .read());
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_1_25_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<31>)((sc_int<31> )s_reg_46
                                           .read()), 
                                           (sc_bv<1>)(0ULL)) );
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_25_in1(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_25_in1 = SobelFilter_Add_32Ux32U_32U_4_49_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_1_25_in1 = SobelFilter_Add_32Ux32U_32U_4_22_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_25
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_25(){
  SobelFilter_Add_32Ux32U_32U_1_25_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_25_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_25_in1
                                          .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_26
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_26(){
  SobelFilter_Add_32Ux32U_32U_4_26_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx6S_32S_4_24_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_23_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_27_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_27_in2 = (sc_int<32> ) (s_reg_33.read());
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_27_in2 = (sc_int<32> ) (s_reg_17.read());
  }
}
// resource: mux_3bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice = 2LL;
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice = -3LL;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_27
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_27(){
  SobelFilter_Mul_32Sx6S_32S_4_27_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_27_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                         (sc_bv<1>)(((/*imp*/sc_int<1> ) SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice
                                         .read().range(2,2))), 
                                         (sc_bv<4>)(( (sc_int<4> )(sc_bv<4>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<3>)(( (sc_int<3> )(sc_bv<3>)(
                                         (sc_bv<2>)(((/*imp*/sc_int<2> ) SobelFilter_Mul_32Sx6S_32S_4_27_in1_slice
                                         .read().range(1,0))), 
                                         (sc_bv<1>)(1ULL)) ))) ))) ))) );
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_28_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_28_in2 = SobelFilter_Add_32Ux32U_32U_4_12_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_28_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<30>)((sc_int<30> )s_reg_19
                                           .read()), 
                                           (sc_bv<2>)(0ULL)) );
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_28_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_28_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_10_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_28_in1 = SobelFilter_Add_32Ux32U_32U_1_25_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_28
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_28(){
  SobelFilter_Add_32Ux32U_32U_4_28_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_28_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_28_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx3U_32S_4_29_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx3U_32S_4_29_in2 = (sc_int<32> ) (s_reg_18.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx3U_32S_4_29_in2 = (sc_int<32> ) (s_reg_40.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx3U_32S_4_29_in2 = (sc_int<32> ) (s_reg_50.read());
    break;
  }
}
// resource: mux_2bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice = 1ULL;
  } else {
    SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice = 2ULL;
  }
}
// resource: SobelFilter_Mul_32Sx3U_32S_4  instance: SobelFilter_Mul_32Sx3U_32S_4_29
void SobelFilter::SobelFilter_Mul_32Sx3U_32S_4_29(){
  SobelFilter_Mul_32Sx3U_32S_4_29_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx3U_32S_4_29_in2
                                         .read() * ( (sc_uint<3> )(sc_bv<3>)(
                                         (sc_bv<2>)((sc_uint<2> )SobelFilter_Mul_32Sx3U_32S_4_29_in1_slice
                                         .read()), 
                                         (sc_bv<1>)(1ULL)) );
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_30
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_30(){
  SobelFilter_Add_32Ux32U_32U_4_30_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx6S_32S_4_27_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_26_out1
                                          .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_31
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_31(){
  SobelFilter_Add_32Ux32U_32U_4_31_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx3U_32S_4_29_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_28_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx4U_32S_4_32_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx4U_32S_4_32_in2 = (sc_int<32> ) (s_reg_34.read());
  } else {
    SobelFilter_Mul_32Sx4U_32S_4_32_in2 = (sc_int<32> ) (s_reg_21.read());
  }
}
// resource: SobelFilter_Mul_32Sx4U_32S_4  instance: SobelFilter_Mul_32Sx4U_32S_4_32
void SobelFilter::SobelFilter_Mul_32Sx4U_32S_4_32(){
  SobelFilter_Mul_32Sx4U_32S_4_32_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx4U_32S_4_32_in2
                                         .read() * 10ULL;
}
// resource: mux_31bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_33_in2_slice(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_33_in2_slice = (sc_uint<31> )s_reg_52.read();
  } else {
    SobelFilter_Add_32Ux32U_32U_1_33_in2_slice = ( (sc_uint<31> )(sc_bv<31>)(
                                                 (sc_bv<30>)((sc_uint<30> )
                                                 s_reg_23.read()), 
                                                 (sc_bv<1>)(0ULL)) );
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_33
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_33(){
  SobelFilter_Add_32Ux32U_32U_1_33_out1 = (/*cliff*/sc_uint<32>)(( (sc_uint<32> 
                                          )(sc_bv<32>)((sc_bv<31>)((sc_uint<31> 
                                          )SobelFilter_Add_32Ux32U_32U_1_33_in2_slice
                                          .read()), 
                                          (sc_bv<1>)(0ULL)) ) + 
                                          SobelFilter_Add_32Ux32U_32U_4_31_out1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx4S_32S_4_34_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx4S_32S_4_34_in2 = (sc_int<32> ) (s_reg_22.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx4S_32S_4_34_in2 = (sc_int<32> ) (s_reg_38.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx4S_32S_4_34_in2 = (sc_int<32> ) (s_reg_44.read());
    break;
  }
}
// resource: mux_2bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice = -2LL;
  } else {
    SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice = 1LL;
  }
}
// resource: SobelFilter_Mul_32Sx4S_32S_4  instance: SobelFilter_Mul_32Sx4S_32S_4_34
void SobelFilter::SobelFilter_Mul_32Sx4S_32S_4_34(){
  SobelFilter_Mul_32Sx4S_32S_4_34_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx4S_32S_4_34_in2
                                         .read() * ( (sc_int<4> )(sc_bv<4>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<3>)(( (sc_int<3> )(sc_bv<3>)(
                                         (sc_bv<2>)((sc_int<2> )SobelFilter_Mul_32Sx4S_32S_4_34_in1_slice
                                         .read()), 
                                         (sc_bv<1>)(1ULL)) ))) );
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_35_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_35_in2 = (sc_int<32> ) (s_reg_24.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_35_in2 = (sc_int<32> ) (s_reg_25.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_35_in2 = (sc_int<32> ) (s_reg_35.read());
    break;
  }
}
// resource: mux_5bx3i3c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice = -13LL;
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice = 13LL;
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice = -12LL;
    break;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_35
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_35(){
  SobelFilter_Mul_32Sx6S_32S_4_35_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_35_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<5>)((sc_int<5> )SobelFilter_Mul_32Sx6S_32S_4_35_in1_slice
                                         .read())) );
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_36_in2(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_36_in2 = SobelFilter_Add_32Ux32U_32U_1_25_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_1_36_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx4S_32S_4_34_out1
                                           .read());
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_36_in1(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_36_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_20_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_1_36_in1 = SobelFilter_Add_32Ux32U_32U_1_33_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_36
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_36(){
  SobelFilter_Add_32Ux32U_32U_1_36_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_36_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_36_in1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_37_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_37_in2 = (sc_int<32> ) (s_reg_32.read());
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_37_in2 = (sc_int<32> ) (s_reg_25.read());
  }
}
// resource: mux_3bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice = 3LL;
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice = -4LL;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_37
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_37(){
  SobelFilter_Mul_32Sx6S_32S_4_37_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_37_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<3>)(6ULL), 
                                         (sc_bv<3>)((sc_int<3> )SobelFilter_Mul_32Sx6S_32S_4_37_in1_slice
                                         .read())) );
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_38
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_38(){
  SobelFilter_Add_32Ux32U_32U_1_38_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx6S_32S_4_37_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_36_out1
                                          .read());
}
// resource: SobelFilter_Mul_32Sx7U_32S_4  instance: SobelFilter_Mul_32Sx7U_32S_4_39
void SobelFilter::SobelFilter_Mul_32Sx7U_32S_4_39(){
  SobelFilter_Mul_32Sx7U_32S_4_39_out1 = (/*cliff*/sc_int<32>)(sc_int<32> )
                                         s_reg_28.read() * 71ULL;
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_49
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_49(){
  SobelFilter_Add_32Ux32U_32U_4_49_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          s_reg_87.read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_22_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_65_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_65_in2 = SobelFilter_Add_32Ux32U_32U_1_36_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_1_65_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx4U_32S_4_32_out1
                                           .read());
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_65_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_65_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_18_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_1_65_in1 = SobelFilter_Add_32Ux32U_32U_1_38_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_65
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_65(){
  SobelFilter_Add_32Ux32U_32U_1_65_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_65_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_65_in1
                                          .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_66
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_66(){
  SobelFilter_Add_32Ux32U_32U_1_66_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_65_out1
                                          .read() + (sc_uint<32> )
                                          SobelFilter_Minus_32S_32S_4_8_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_68_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_68_in2 = SobelFilter_Add_32Ux32U_32U_1_66_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_1_68_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx4S_32S_4_34_out1
                                           .read());
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_68_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_68_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_1_7_out1
                                           .read());
  } else {
    SobelFilter_Add_32Ux32U_32U_1_68_in1 = SobelFilter_Add_32Ux32U_32U_1_66_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_68
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_68(){
  SobelFilter_Add_32Ux32U_32U_1_68_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_68_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_68_in1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_70_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_70_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<31>)((sc_int<31> )
                                           SobelFilter_Add_32Ux32U_32U_1_33_out1
                                           .read()), 
                                           (sc_bv<1>)(0ULL)) );
  } else {
    SobelFilter_Add_32Ux32U_32U_1_70_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx3U_32S_4_29_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_70
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_70(){
  SobelFilter_Add_32Ux32U_32U_1_70_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_70_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_68_out1
                                          .read());
}
// resource: regr_en_sc_2
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 3ULL: 
    global_state_next = 1ULL;
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2 = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h2 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h4(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h4 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h6(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6 = 0ULL;
        break;
      case 1ULL: case 2ULL: 
        gs_ctrl_do_filter_h6 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_102_out1.read().range(2,2)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_102
void SobelFilter::SobelFilter_gen_busy_r_4_102_p7(){
  SobelFilter_gen_busy_r_4_102_out1 = (sc_uint<3> ) (( (sc_biguint<3> )
                                      (sc_bv<3>)((sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_102_gnew_req
                                      .read()), 
                                      (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                      (sc_bv<1>)(
                                      SobelFilter_gen_busy_r_4_102_gdiv.read())
                                      , 
                                      (sc_bv<1>)(SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                      .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_102
void SobelFilter::SobelFilter_gen_busy_r_4_102_p6(){
  SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_102_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_102
void SobelFilter::SobelFilter_gen_busy_r_4_102_p5(){
  SobelFilter_gen_busy_r_4_102_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                      .read() & !
                                      SobelFilter_gen_busy_r_4_102_gnew_req
                                      .read());
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_102
void SobelFilter::SobelFilter_gen_busy_r_4_102_p4(){
  SobelFilter_gen_busy_r_4_102_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                          i_rgb_m_busy_req_0.read() & ( 
                                          i_rgb_m_unvalidated_req.read() | 
                                          i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_0_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_0_4
void SobelFilter::SobelFilter_N_Muxb_1_2_0_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                        .read());
  } else {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void SobelFilter::drive_o_avg_vld(){
  o_avg_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (o_avg_m_unacked_req.read()
                                      | (sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_unacked_req = 0ULL;
  } else {
    o_avg_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_100_out1
                          .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_100
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_100(){
  SobelFilter_And_1Ux1U_1U_4_100_out1 = (sc_uint<1> ) (o_avg_busy.read() & 
                                        o_avg_vld.read());
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_avg_m_req_m_trig_req
                                      .read() ^ o_avg_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_avg_m_req_m_prev_trig_req = o_avg_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_avg_m_req_m_trig_req.read();
}
