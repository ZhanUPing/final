// Generated by stratus_hls 21.20-p100  (96289.240513)
// Wed May 31 05:29:34 2023
// from ../SobelFilter.cpp

`timescale 1ps / 1ps


module SobelFilter( i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_avg_busy, o_avg_vld, o_avg_data );

    input i_clk;
    input i_rst;
    input i_rgb_vld;
    input [31:0] i_rgb_data;
    input o_avg_busy;
    output i_rgb_busy;
    output o_avg_vld;
    output [31:0] o_avg_data;
    reg [31:0] o_avg_data;
    reg o_avg_m_req_m_prev_trig_req;
    reg o_avg_m_unacked_req;
    wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
    reg SobelFilter_N_Muxb_1_2_0_4_4_out1;
    reg i_rgb_m_unvalidated_req;
    wire SobelFilter_gen_busy_r_4_22_gnew_req;
    wire SobelFilter_gen_busy_r_4_22_gdiv;
    wire SobelFilter_gen_busy_r_4_22_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next;
    reg[3:0] global_state_next;
    reg gs_ctrl_do_filter_h200;
    reg[31:0] SobelFilter_Add_32Ux32U_32U_4_12_in1;
    reg gs_ctrl_do_filter_h800;
    reg[31:0] SobelFilter_Add_32Ux32U_32U_4_12_in2;
    reg[1:0] gs_ctrl_do_filter_h2800;
    wire[31:0] SobelFilter_Mul_32Ux32U_32U_4_11_out1;
    reg[31:0] SobelFilter_Mul_32Ux32U_32U_4_11_in1;
    reg[31:0] SobelFilter_Mul_32Ux32U_32U_4_11_in2;
    reg gs_ctrl_do_filter_h400;
    reg gs_ctrl_do_filter_h10;
    reg[4:0] SobelFilter_Sub_5Ux1U_6S_4_8_in2;
    reg[1:0] gs_ctrl_do_filter_h6b0;
    reg[1:0] gs_ctrl_do_filter_h906;
    reg[2:0] gs_ctrl_do_filter_h1f86;
    reg[1:0] gs_ctrl_do_filter_h900;
    reg[2:0] gs_ctrl_do_filter_h1f84;
    reg[1:0] gs_ctrl_do_filter_h4b;
    reg[2:0] gs_ctrl_do_filter_h447f;
    reg[1:0] gs_ctrl_do_filter_h48;
    reg[1:0] gs_ctrl_do_filter_h4466;
    reg[4:0] s_reg_5_slice;
    reg[31:0] s_reg_13;
    /*signed*/wire[5:0] SobelFilter_Sub_5Ux1U_6S_4_8_out1;
    wire[5:0] SobelFilter_Add_5Ux1U_6U_4_6_out1;
    reg[5:0] s_reg_11;
    wire SobelFilter_And_1Ux1U_1U_4_20_out1;
    wire[2:0] SobelFilter_gen_busy_r_4_22_out1;
    wire SobelFilter_Not_1U_1U_1_3_out1;
    reg o_avg_m_req_m_trig_req;
    reg i_rgb_m_busy_req_0;
    wire[31:0] SobelFilter_Add_32Ux32U_32U_4_12_out1;
    wire SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1;
    wire[5:0] SobelFilter_Add_5Ux1U_6U_4_7_out1;
    reg[3:0] global_state;
    reg stall0;
    reg filter_coeffs_CE;
    wire[4:0] filter_coeffs_in1;
    wire[31:0] filter_coeffs_out1;
    reg filter_coeffs_H_CE;
    wire[4:0] filter_coeffs_H_in1;
    wire[31:0] filter_coeffs_H_out1;
    reg[31:0] shift_reg_DIN;
    reg shift_reg_CE;
    reg shift_reg_RW;
    reg[4:0] shift_reg_in1;
    wire[31:0] shift_reg_out1;
    reg[31:0] shift_reg_H_DIN;
    reg shift_reg_H_CE;
    reg shift_reg_H_RW;
    reg[4:0] shift_reg_H_in1;
    wire[31:0] shift_reg_H_out1;

    SobelFilter_RAM_31X32_3 shift_reg_H( 
                              .DIN( shift_reg_H_DIN ),
                              .CE( shift_reg_H_CE ),
                              .RW( shift_reg_H_RW ),
                              .in1( shift_reg_H_in1 ),
                              .out1( shift_reg_H_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_RAM_28X32_1 shift_reg( 
                              .DIN( shift_reg_DIN ),
                              .CE( shift_reg_CE ),
                              .RW( shift_reg_RW ),
                              .in1( shift_reg_in1 ),
                              .out1( shift_reg_out1 ),
                              .clk( i_clk )
                            );
    SobelFilter_ROM_31X32_filter_coeffs_H filter_coeffs_H( 
                                            .CE( filter_coeffs_H_CE ),
                                            .in1( filter_coeffs_H_in1 ),
                                            .out1( filter_coeffs_H_out1 ),
                                            .clk( i_clk )
                                          );
    SobelFilter_ROM_28X32_filter_coeffs filter_coeffs( 
                                          .CE( filter_coeffs_CE ),
                                          .in1( filter_coeffs_in1 ),
                                          .out1( filter_coeffs_out1 ),
                                          .clk( i_clk )
                                        );
    
    // resource: mux_32bx2i1c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_o_avg_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                4'd02: 
                  begin
                    if (6'd31 == SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                      begin
                        o_avg_data <= 32'd0000000000;
                      end 
                  end
                4'd05: 
                  begin
                    if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                      begin
                        o_avg_data <= SobelFilter_Add_32Ux32U_32U_4_12_out1;
                      end 
                  end
                4'd07, 4'd14: 
                  begin
                    o_avg_data <= 32'd0000000000;
                  end
                4'd10, 4'd13: 
                  begin
                    o_avg_data <= SobelFilter_Add_32Ux32U_32U_4_12_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_busy_req_0
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_busy_req_0 <= 1'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    4'd05: 
                      begin
                        if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                          begin
                          end 
                        else 
                          begin
                            i_rgb_m_busy_req_0 <= 1'd0;
                          end
                      end
                    4'd06: 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_req_m_trig_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_req_m_trig_req <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    4'd13: 
                      begin
                        o_avg_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx3i1c
    always @(SobelFilter_And_1Ux1U_1U_4_20_out1 or SobelFilter_gen_busy_r_4_22_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          4'd06: 
            begin
              stall0 = SobelFilter_gen_busy_r_4_22_out1[0];
            end
          4'd14: 
            begin
              stall0 = SobelFilter_And_1Ux1U_1U_4_20_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // resource: mux_6bx4i2c
    // resource: regr_en_sc_6
    always @(posedge i_clk)
      begin : drive_s_reg_11
        if (i_rst == 1'b0) 
          begin
            s_reg_11 <= 6'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    4'd01: 
                      begin
                        if (6'd28 != SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                          begin
                            s_reg_11 <= SobelFilter_Add_5Ux1U_6U_4_6_out1;
                          end 
                      end
                    4'd02, 4'd14: 
                      begin
                        s_reg_11 <= 6'd27;
                      end
                    4'd04, 4'd09: 
                      begin
                        s_reg_11 <= SobelFilter_Sub_5Ux1U_6S_4_8_out1;
                      end
                    4'd07: 
                      begin
                        s_reg_11 <= 6'd30;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_13
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                4'd05: 
                  begin
                    s_reg_13 <= SobelFilter_Add_32Ux32U_32U_4_12_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_5
    always @(posedge i_clk)
      begin : drive_s_reg_5_slice
        if (i_rst == 1'b0) 
          begin
            s_reg_5_slice <= 5'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    4'd02: 
                      begin
                        if (6'd31 != SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                          begin
                            s_reg_5_slice <= SobelFilter_Add_5Ux1U_6U_4_7_out1[4:0];
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: SobelFilter_Add_5Ux1U_6U_4  instance: SobelFilter_Add_5Ux1U_6U_4_6
    assign SobelFilter_Add_5Ux1U_6U_4_6_out1 = {1'b0, s_reg_11[4:0]} + 6'd01;
    
    // resource: mux_5bx4i1c
    always @(s_reg_11[4:0] or SobelFilter_Add_5Ux1U_6U_4_6_out1[4:0] or SobelFilter_Sub_5Ux1U_6S_4_8_out1[4:0] or gs_ctrl_do_filter_h4466)
      begin : drive_shift_reg_in1
        case (gs_ctrl_do_filter_h4466) 
          2'd1: 
            begin
              shift_reg_in1 = SobelFilter_Add_5Ux1U_6U_4_6_out1[4:0];
            end
          2'd2: 
            begin
              shift_reg_in1 = SobelFilter_Sub_5Ux1U_6S_4_8_out1[4:0];
            end
          2'd3: 
            begin
              shift_reg_in1 = 5'd00;
            end
          default: 
            begin
              shift_reg_in1 = s_reg_11[4:0];
            end
        endcase
      end
    
    // resource: mux_32bx3i1c
    always @(i_rgb_data or shift_reg_out1 or gs_ctrl_do_filter_h48)
      begin : drive_shift_reg_DIN
        case (gs_ctrl_do_filter_h48) 
          2'd1: 
            begin
              shift_reg_DIN = shift_reg_out1;
            end
          2'd2: 
            begin
              shift_reg_DIN = i_rgb_data;
            end
          default: 
            begin
              shift_reg_DIN = 32'd0000000000;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_Add_5Ux1U_6U_4_6_out1 or SobelFilter_Add_5Ux1U_6U_4_7_out1 or SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1 or gs_ctrl_do_filter_h447f)
      begin : drive_shift_reg_CE
        if (stall0) 
          begin
            shift_reg_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h447f) 
              3'd1: 
                begin
                  shift_reg_CE = 1'b1;
                end
              3'd2: 
                begin
                  if (6'd28 != SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                    begin
                      shift_reg_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_CE = 1'b0;
                    end
                end
              3'd3: 
                begin
                  if (6'd31 == SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                    begin
                      shift_reg_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_CE = 1'b0;
                    end
                end
              3'd4: 
                begin
                  if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                    begin
                      shift_reg_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_CE = 1'b0;
                    end
                end
              3'd5: 
                begin
                  if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                    begin
                      shift_reg_CE = 1'b0;
                    end 
                  else 
                    begin
                      shift_reg_CE = 1'b1;
                    end
                end
              default: 
                begin
                  shift_reg_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_Add_5Ux1U_6U_4_6_out1 or gs_ctrl_do_filter_h4b)
      begin : drive_shift_reg_RW
        if (stall0) 
          begin
            shift_reg_RW = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h4b) 
              2'd1: 
                begin
                  shift_reg_RW = 1'b1;
                end
              2'd2: 
                begin
                  if (6'd28 != SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                    begin
                      shift_reg_RW = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_RW = 1'b0;
                    end
                end
              default: 
                begin
                  shift_reg_RW = 1'b0;
                end
            endcase
          end
      end
    
    // resource: SobelFilter_Add_5Ux1U_6U_4  instance: SobelFilter_Add_5Ux1U_6U_4_7
    assign SobelFilter_Add_5Ux1U_6U_4_7_out1 = {1'b0, s_reg_5_slice} + 6'd01;
    
    // resource: mux_5bx5i1c
    always @(s_reg_11[4:0] or SobelFilter_Add_5Ux1U_6U_4_7_out1[4:0] or SobelFilter_Sub_5Ux1U_6S_4_8_out1[4:0] or gs_ctrl_do_filter_h1f84 or s_reg_5_slice)
      begin : drive_shift_reg_H_in1
        case (gs_ctrl_do_filter_h1f84) 
          3'd1: 
            begin
              shift_reg_H_in1 = SobelFilter_Add_5Ux1U_6U_4_7_out1[4:0];
            end
          3'd2: 
            begin
              shift_reg_H_in1 = SobelFilter_Sub_5Ux1U_6S_4_8_out1[4:0];
            end
          3'd3: 
            begin
              shift_reg_H_in1 = s_reg_11[4:0];
            end
          3'd4: 
            begin
              shift_reg_H_in1 = 5'd00;
            end
          default: 
            begin
              shift_reg_H_in1 = s_reg_5_slice;
            end
        endcase
      end
    
    // resource: mux_32bx3i1c
    always @(SobelFilter_Add_32Ux32U_32U_4_12_out1 or shift_reg_H_out1 or gs_ctrl_do_filter_h900)
      begin : drive_shift_reg_H_DIN
        case (gs_ctrl_do_filter_h900) 
          2'd1: 
            begin
              shift_reg_H_DIN = shift_reg_H_out1;
            end
          2'd2: 
            begin
              shift_reg_H_DIN = SobelFilter_Add_32Ux32U_32U_4_12_out1;
            end
          default: 
            begin
              shift_reg_H_DIN = 32'd0000000000;
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_Add_5Ux1U_6U_4_6_out1 or SobelFilter_Add_5Ux1U_6U_4_7_out1 or SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1 or gs_ctrl_do_filter_h1f86)
      begin : drive_shift_reg_H_CE
        if (stall0) 
          begin
            shift_reg_H_CE = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h1f86) 
              3'd1: 
                begin
                  if (6'd28 == SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                    begin
                      shift_reg_H_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_H_CE = 1'b0;
                    end
                end
              3'd2: 
                begin
                  if (6'd31 != SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                    begin
                      shift_reg_H_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_H_CE = 1'b0;
                    end
                end
              3'd3: 
                begin
                  shift_reg_H_CE = 1'b1;
                end
              3'd4: 
                begin
                  if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                    begin
                      shift_reg_H_CE = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_H_CE = 1'b0;
                    end
                end
              default: 
                begin
                  shift_reg_H_CE = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    always @(stall0 or SobelFilter_Add_5Ux1U_6U_4_6_out1 or SobelFilter_Add_5Ux1U_6U_4_7_out1 or gs_ctrl_do_filter_h906)
      begin : drive_shift_reg_H_RW
        if (stall0) 
          begin
            shift_reg_H_RW = 1'b0;
          end 
        else 
          begin
            case (gs_ctrl_do_filter_h906) 
              2'd1: 
                begin
                  if (6'd28 == SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                    begin
                      shift_reg_H_RW = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_H_RW = 1'b0;
                    end
                end
              2'd2: 
                begin
                  if (6'd31 != SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                    begin
                      shift_reg_H_RW = 1'b1;
                    end 
                  else 
                    begin
                      shift_reg_H_RW = 1'b0;
                    end
                end
              2'd3: 
                begin
                  shift_reg_H_RW = 1'b1;
                end
              default: 
                begin
                  shift_reg_H_RW = 1'b0;
                end
            endcase
          end
      end
    
    // resource: mux_5bx3i2c
    always @(s_reg_11[4:0] or gs_ctrl_do_filter_h6b0)
      begin : drive_SobelFilter_Sub_5Ux1U_6S_4_8_in2
        case (gs_ctrl_do_filter_h6b0) 
          2'd1: 
            begin
              SobelFilter_Sub_5Ux1U_6S_4_8_in2 = s_reg_11[4:0];
            end
          2'd2: 
            begin
              SobelFilter_Sub_5Ux1U_6S_4_8_in2 = 5'd30;
            end
          default: 
            begin
              SobelFilter_Sub_5Ux1U_6S_4_8_in2 = 5'd27;
            end
        endcase
      end
    
    // resource: SobelFilter_Sub_5Ux1U_6S_4  instance: SobelFilter_Sub_5Ux1U_6S_4_8
    assign SobelFilter_Sub_5Ux1U_6S_4_8_out1 = {1'b0, SobelFilter_Sub_5Ux1U_6S_4_8_in2} - 6'd01;
    
    // instance: drive_filter_coeffs_in1
    assign filter_coeffs_in1 = s_reg_11[4:0];
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h10)
      begin : drive_filter_coeffs_CE
        if (stall0) 
          begin
            filter_coeffs_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h10) 
              begin
                filter_coeffs_CE = 1'b1;
              end 
            else 
              begin
                filter_coeffs_CE = 1'b0;
              end
          end
      end
    
    // resource: SobelFilter_GreaterThan_6Sx2S_1U_4  instance: SobelFilter_GreaterThan_6Sx2S_1U_4_10
    assign SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1 = s_reg_11[5] ^ s_reg_11 > 6'd00;
    
    // resource: mux_32bx2i0c
    always @(shift_reg_out1 or shift_reg_H_out1 or gs_ctrl_do_filter_h400)
      begin : drive_SobelFilter_Mul_32Ux32U_32U_4_11_in2
        if (gs_ctrl_do_filter_h400) 
          begin
            SobelFilter_Mul_32Ux32U_32U_4_11_in2 = shift_reg_H_out1;
          end 
        else 
          begin
            SobelFilter_Mul_32Ux32U_32U_4_11_in2 = shift_reg_out1;
          end
      end
    
    // resource: mux_32bx2i0c
    always @(filter_coeffs_out1 or filter_coeffs_H_out1 or gs_ctrl_do_filter_h400)
      begin : drive_SobelFilter_Mul_32Ux32U_32U_4_11_in1
        if (gs_ctrl_do_filter_h400) 
          begin
            SobelFilter_Mul_32Ux32U_32U_4_11_in1 = filter_coeffs_H_out1;
          end 
        else 
          begin
            SobelFilter_Mul_32Ux32U_32U_4_11_in1 = filter_coeffs_out1;
          end
      end
    
    // resource: SobelFilter_Mul_32Ux32U_32U_4  instance: SobelFilter_Mul_32Ux32U_32U_4_11
    assign SobelFilter_Mul_32Ux32U_32U_4_11_out1 = SobelFilter_Mul_32Ux32U_32U_4_11_in2 * SobelFilter_Mul_32Ux32U_32U_4_11_in1;
    
    // resource: mux_32bx3i0c
    always @(shift_reg_out1[30:0] or SobelFilter_Mul_32Ux32U_32U_4_11_out1 or shift_reg_H_out1[30:0] or gs_ctrl_do_filter_h2800)
      begin : drive_SobelFilter_Add_32Ux32U_32U_4_12_in2
        case (gs_ctrl_do_filter_h2800) 
          2'd1: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_12_in2 = {shift_reg_out1[30:0], 1'b0};
            end
          2'd2: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_12_in2 = {shift_reg_H_out1[30:0], 1'b0};
            end
          default: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_12_in2 = SobelFilter_Mul_32Ux32U_32U_4_11_out1;
            end
        endcase
      end
    
    // resource: mux_32bx2i0c
    always @(o_avg_data or s_reg_13 or gs_ctrl_do_filter_h800)
      begin : drive_SobelFilter_Add_32Ux32U_32U_4_12_in1
        if (gs_ctrl_do_filter_h800) 
          begin
            SobelFilter_Add_32Ux32U_32U_4_12_in1 = s_reg_13;
          end 
        else 
          begin
            SobelFilter_Add_32Ux32U_32U_4_12_in1 = o_avg_data;
          end
      end
    
    // resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_12
    assign SobelFilter_Add_32Ux32U_32U_4_12_out1 = SobelFilter_Add_32Ux32U_32U_4_12_in2 + SobelFilter_Add_32Ux32U_32U_4_12_in1;
    
    // instance: drive_filter_coeffs_H_in1
    assign filter_coeffs_H_in1 = s_reg_11[4:0];
    
    // resource: mux_1bx2i2c
    always @(stall0 or gs_ctrl_do_filter_h200)
      begin : drive_filter_coeffs_H_CE
        if (stall0) 
          begin
            filter_coeffs_H_CE = 1'b0;
          end 
        else 
          begin
            if (gs_ctrl_do_filter_h200) 
              begin
                filter_coeffs_H_CE = 1'b1;
              end 
            else 
              begin
                filter_coeffs_H_CE = 1'b0;
              end
          end
      end
    
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_global_state
        if (i_rst == 1'b0) 
          begin
            global_state <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // resource: mux_4bx5i4c
    always @(SobelFilter_Add_5Ux1U_6U_4_6_out1 or SobelFilter_Add_5Ux1U_6U_4_7_out1 or SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1 or global_state)
      begin : drive_global_state_next
        case (global_state) 
          4'd01: 
            begin
              case (SobelFilter_Add_5Ux1U_6U_4_6_out1) 
                6'd28: 
                  begin
                    global_state_next = global_state + 4'd01;
                  end
                default: 
                  begin
                    global_state_next = 4'd01;
                  end
              endcase
            end
          4'd02: 
            begin
              case (SobelFilter_Add_5Ux1U_6U_4_7_out1) 
                6'd31: 
                  begin
                    global_state_next = global_state + 4'd01;
                  end
                default: 
                  begin
                    global_state_next = 4'd02;
                  end
              endcase
            end
          4'd05: 
            begin
              if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                begin
                  global_state_next = 4'd03;
                end 
              else 
                begin
                  global_state_next = global_state + 4'd01;
                end
            end
          4'd10: 
            begin
              if (SobelFilter_GreaterThan_6Sx2S_1U_4_10_out1) 
                begin
                  global_state_next = 4'd08;
                end 
              else 
                begin
                  global_state_next = global_state + 4'd01;
                end
            end
          4'd14: 
            begin
              global_state_next = 4'd03;
            end
          default: 
            begin
              global_state_next = global_state + 4'd01;
            end
        endcase
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4466
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4466 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd01: 
                      begin
                        gs_ctrl_do_filter_h4466 <= 2'd1;
                      end
                    4'd02, 4'd05, 4'd14: 
                      begin
                        gs_ctrl_do_filter_h4466 <= 2'd2;
                      end
                    4'd06, 4'd10: 
                      begin
                        gs_ctrl_do_filter_h4466 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4466 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h48
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h48 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd03: 
                      begin
                        gs_ctrl_do_filter_h48 <= 2'd1;
                      end
                    4'd06: 
                      begin
                        gs_ctrl_do_filter_h48 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h48 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx6i6c
    // resource: regr_en_ss_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h447f
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h447f <= 3'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd00, 4'd03, 4'd04, 4'd06, 4'd14: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd1;
                      end
                    4'd01: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd2;
                      end
                    4'd02: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd3;
                      end
                    4'd05: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd4;
                      end
                    4'd10: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd5;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h447f <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_ss_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h4b
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h4b <= 2'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd00, 4'd03, 4'd06: 
                      begin
                        gs_ctrl_do_filter_h4b <= 2'd1;
                      end
                    4'd01: 
                      begin
                        gs_ctrl_do_filter_h4b <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h4b <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx5i5c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1f84
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1f84 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd02: 
                      begin
                        gs_ctrl_do_filter_h1f84 <= 3'd1;
                      end
                    4'd07, 4'd10: 
                      begin
                        gs_ctrl_do_filter_h1f84 <= 3'd2;
                      end
                    4'd08, 4'd09: 
                      begin
                        gs_ctrl_do_filter_h1f84 <= 3'd3;
                      end
                    4'd11, 4'd12: 
                      begin
                        gs_ctrl_do_filter_h1f84 <= 3'd4;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1f84 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h900
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h900 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd08: 
                      begin
                        gs_ctrl_do_filter_h900 <= 2'd1;
                      end
                    4'd11: 
                      begin
                        gs_ctrl_do_filter_h900 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h900 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_3bx5i5c
    // resource: regr_en_sc_3
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h1f86
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h1f86 <= 3'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd01: 
                      begin
                        gs_ctrl_do_filter_h1f86 <= 3'd1;
                      end
                    4'd02: 
                      begin
                        gs_ctrl_do_filter_h1f86 <= 3'd2;
                      end
                    4'd07, 4'd08, 4'd09, 4'd11, 4'd12: 
                      begin
                        gs_ctrl_do_filter_h1f86 <= 3'd3;
                      end
                    4'd10: 
                      begin
                        gs_ctrl_do_filter_h1f86 <= 3'd4;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h1f86 <= 3'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h906
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h906 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd01: 
                      begin
                        gs_ctrl_do_filter_h906 <= 2'd1;
                      end
                    4'd02: 
                      begin
                        gs_ctrl_do_filter_h906 <= 2'd2;
                      end
                    4'd08, 4'd11: 
                      begin
                        gs_ctrl_do_filter_h906 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h906 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h6b0
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h6b0 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd04, 4'd05, 4'd09, 4'd10: 
                      begin
                        gs_ctrl_do_filter_h6b0 <= 2'd1;
                      end
                    4'd07: 
                      begin
                        gs_ctrl_do_filter_h6b0 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h6b0 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h10
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h10 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd04: 
                      begin
                        gs_ctrl_do_filter_h10 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h10 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h400
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h400 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd10: 
                      begin
                        gs_ctrl_do_filter_h400 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h400 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx3i3c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2800
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2800 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd11: 
                      begin
                        gs_ctrl_do_filter_h2800 <= 2'd1;
                      end
                    4'd13: 
                      begin
                        gs_ctrl_do_filter_h2800 <= 2'd2;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2800 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h800
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h800 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd11: 
                      begin
                        gs_ctrl_do_filter_h800 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h800 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h200
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h200 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    4'd09: 
                      begin
                        gs_ctrl_do_filter_h200 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h200 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // instance: drive_i_rgb_busy
    assign i_rgb_busy = SobelFilter_gen_busy_r_4_22_out1[2];
    
    // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_22 (4 concurrent statements)
      assign SobelFilter_gen_busy_r_4_22_out1 = {SobelFilter_gen_busy_r_4_22_gnew_req, {SobelFilter_gen_busy_r_4_22_gdiv, SobelFilter_gen_busy_r_4_22_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next}};
      assign SobelFilter_gen_busy_r_4_22_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_22_gdiv;
      assign SobelFilter_gen_busy_r_4_22_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_22_gnew_req;
      assign SobelFilter_gen_busy_r_4_22_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);
    // (end of SobelFilter_gen_busy_r_4_22)
    
    // resource: regr_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_unvalidated_req
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_0_4_4_out1;
          end
      end
    
    // resource: SobelFilter_N_Muxb_1_2_0_4
    always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
      begin : SobelFilter_N_Muxb_1_2_0_4_4
        if (i_rgb_m_busy_req_0) 
          begin
            SobelFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_m_unvalidated_req;
          end 
        else 
          begin
            SobelFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_vld;
          end
      end
    
    // instance: drive_o_avg_vld
    assign o_avg_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
    assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_avg_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_unacked_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            o_avg_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_20_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_20
    assign SobelFilter_And_1Ux1U_1U_4_20_out1 = o_avg_busy & o_avg_vld;
    
    // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
    assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_avg_m_req_m_trig_req ^ o_avg_m_req_m_prev_trig_req;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_req_m_prev_trig_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            o_avg_m_req_m_prev_trig_req <= o_avg_m_req_m_trig_req;
          end
      end
    
    // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
    assign SobelFilter_Not_1U_1U_1_3_out1 = !o_avg_m_req_m_trig_req;

endmodule

