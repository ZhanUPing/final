// Generated by stratus_hls 21.20-p100  (96289.240513)
// Wed May 31 05:31:17 2023
// from ../SobelFilter.cpp

`timescale 1ps / 1ps


module SobelFilter( i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_avg_busy, o_avg_vld, o_avg_data );

    input i_clk;
    input i_rst;
    input i_rgb_vld;
    input [31:0] i_rgb_data;
    input o_avg_busy;
    output i_rgb_busy;
    output o_avg_vld;
    output [31:0] o_avg_data;
    reg [31:0] o_avg_data;
    reg o_avg_m_req_m_prev_trig_req;
    reg o_avg_m_unacked_req;
    wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
    reg SobelFilter_N_Muxb_1_2_0_4_4_out1;
    reg i_rgb_m_unvalidated_req;
    wire SobelFilter_gen_busy_r_4_102_gnew_req;
    wire SobelFilter_gen_busy_r_4_102_gdiv;
    wire SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next;
    reg[5:0] global_state_next;
    /*signed*/reg[31:0] SobelFilter_Minus_32S_32S_4_8_in1;
    reg[3:0] gs_ctrl_do_filter_h2e0000e924924;
    reg[31:0] SobelFilter_Add_32Ux32U_32U_4_7_in1;
    /*signed*/wire[31:0] SobelFilter_Minus_32S_32S_4_8_out1;
    reg[1:0] gs_ctrl_do_filter_h7fffffffffffe0;
    reg[31:0] SobelFilter_Add_32Ux32U_32U_4_7_in2;
    reg[3:0] gs_ctrl_do_filter_h7fffffffffffe;
    /*signed*/wire[31:0] SobelFilter_Mul_32Sx8S_32S_4_6_out1;
    /*signed*/reg[7:0] SobelFilter_Mul_32Sx8S_32S_4_6_in1;
    reg[3:0] gs_ctrl_do_filter_h5ff402db6d0;
    /*signed*/reg[31:0] SobelFilter_Mul_32Sx8S_32S_4_6_in2;
    reg[4:0] gs_ctrl_do_filter_h5ff416db6d8;
    reg[30:0] s_reg_7_slice;
    reg[31:0] s_reg_56;
    reg[31:0] s_reg_66;
    reg[31:0] s_reg_53;
    reg[31:0] s_reg_50;
    reg[31:0] s_reg_8;
    reg[31:0] s_reg_5;
    reg[31:0] s_reg_57;
    reg[31:0] s_reg_51;
    reg[31:0] s_reg_48;
    reg[31:0] s_reg_55;
    reg[31:0] s_reg_49;
    reg[31:0] s_reg_47;
    reg[31:0] s_reg_45;
    reg[31:0] s_reg_43;
    reg[31:0] s_reg_46;
    reg[31:0] s_reg_42;
    reg[31:0] s_reg_44;
    reg[31:0] s_reg_41;
    reg[31:0] s_reg_6;
    reg[31:0] s_reg_4;
    reg[31:0] s_reg_58;
    reg[31:0] s_reg_40;
    reg[31:0] s_reg_39;
    reg[31:0] s_reg_38;
    reg[31:0] s_reg_37;
    reg[31:0] s_reg_36;
    reg[31:0] s_reg_35;
    reg[31:0] s_reg_34;
    reg[31:0] s_reg_33;
    reg[31:0] s_reg_32;
    reg[31:0] s_reg_31;
    reg[31:0] s_reg_30;
    reg[31:0] s_reg_29;
    reg[31:0] s_reg_28;
    reg[31:0] s_reg_27;
    reg[31:0] s_reg_26;
    reg[31:0] s_reg_59;
    reg[31:0] s_reg_25;
    reg[31:0] s_reg_22;
    reg[31:0] s_reg_24;
    reg[31:0] s_reg_21;
    reg[31:0] s_reg_23;
    reg[31:0] s_reg_18;
    reg[31:0] s_reg_20;
    reg[31:0] s_reg_19;
    reg[31:0] s_reg_16;
    reg[31:0] s_reg_17;
    reg[31:0] s_reg_146;
    reg[31:0] s_reg_15;
    reg[31:0] s_reg_60;
    reg[31:0] s_reg_9;
    reg[31:0] s_reg_122;
    reg[31:0] s_reg_14;
    reg[31:0] s_reg_13;
    reg[31:0] s_reg_11;
    reg[31:0] s_reg_12;
    reg[31:0] s_reg_10;
    wire SobelFilter_And_1Ux1U_1U_4_100_out1;
    wire[2:0] SobelFilter_gen_busy_r_4_102_out1;
    wire SobelFilter_Not_1U_1U_1_3_out1;
    reg o_avg_m_req_m_trig_req;
    reg i_rgb_m_busy_req_0;
    wire[31:0] SobelFilter_Add_32Ux32U_32U_4_7_out1;
    reg[5:0] global_state;
    reg stall0;

    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_o_avg_data
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd01, 6'd25, 6'd26, 6'd27, 6'd28, 6'd29, 6'd30, 6'd31, 6'd32, 6'd33, 6'd34, 6'd35, 6'd36, 6'd37, 6'd38, 6'd39, 6'd40, 6'd41, 6'd42, 6'd43, 6'd44, 6'd45, 6'd46, 6'd47, 6'd50: 
                  begin
                    o_avg_data <= SobelFilter_Add_32Ux32U_32U_4_7_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: mux_1bx2i2c
    // resource: regr_en_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_busy_req_0
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_busy_req_0 <= 1'd1;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd24: 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd0;
                      end
                    6'd25: 
                      begin
                        i_rgb_m_busy_req_0 <= 1'd1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_req_m_trig_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_req_m_trig_req <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd50: 
                      begin
                        o_avg_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_1bx3i1c
    always @(SobelFilter_And_1Ux1U_1U_4_100_out1 or SobelFilter_gen_busy_r_4_102_out1[0] or global_state)
      begin : drive_stall0
        case (global_state) 
          6'd25: 
            begin
              stall0 = SobelFilter_gen_busy_r_4_102_out1[0];
            end
          6'd51: 
            begin
              stall0 = SobelFilter_And_1Ux1U_1U_4_100_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_10
        if (i_rst == 1'b0) 
          begin
            s_reg_10 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_10 <= s_reg_12;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_11
        if (i_rst == 1'b0) 
          begin
            s_reg_11 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_11 <= s_reg_13;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_12
        if (i_rst == 1'b0) 
          begin
            s_reg_12 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_12 <= s_reg_14;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_32bx2i0c
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_122
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd00, 6'd51: 
                  begin
                    s_reg_122 <= {s_reg_9[30], s_reg_9[30:0]};
                  end
                6'd02, 6'd03, 6'd05, 6'd06, 6'd08, 6'd09, 6'd11, 6'd12, 6'd14, 6'd15, 6'd17, 6'd18, 6'd20, 6'd21, 6'd23, 6'd24, 6'd49: 
                  begin
                    s_reg_122 <= SobelFilter_Add_32Ux32U_32U_4_7_out1;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_13
        if (i_rst == 1'b0) 
          begin
            s_reg_13 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_13 <= s_reg_60;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_14
        if (i_rst == 1'b0) 
          begin
            s_reg_14 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_14 <= s_reg_15;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_32
    always @(posedge i_clk)
      begin : drive_s_reg_146
        case (stall0) 
          1'b1: 
            begin
            end
          default: 
            begin
              case (global_state) 
                6'd25: 
                  begin
                    s_reg_146 <= i_rgb_data;
                  end
              endcase
            end
        endcase
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_15
        if (i_rst == 1'b0) 
          begin
            s_reg_15 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_15 <= s_reg_17;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_16
        if (i_rst == 1'b0) 
          begin
            s_reg_16 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_16 <= s_reg_19;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_17
        if (i_rst == 1'b0) 
          begin
            s_reg_17 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_17 <= s_reg_20;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_18
        if (i_rst == 1'b0) 
          begin
            s_reg_18 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_18 <= s_reg_23;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_19
        if (i_rst == 1'b0) 
          begin
            s_reg_19 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_19 <= s_reg_18;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_20
        if (i_rst == 1'b0) 
          begin
            s_reg_20 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_20 <= s_reg_21;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_21
        if (i_rst == 1'b0) 
          begin
            s_reg_21 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_21 <= s_reg_24;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_22
        if (i_rst == 1'b0) 
          begin
            s_reg_22 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_22 <= s_reg_25;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_23
        if (i_rst == 1'b0) 
          begin
            s_reg_23 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_23 <= s_reg_59;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_24
        if (i_rst == 1'b0) 
          begin
            s_reg_24 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_24 <= s_reg_26;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_25
        if (i_rst == 1'b0) 
          begin
            s_reg_25 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_25 <= s_reg_27;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_26
        if (i_rst == 1'b0) 
          begin
            s_reg_26 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_26 <= s_reg_28;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_27
        if (i_rst == 1'b0) 
          begin
            s_reg_27 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_27 <= s_reg_29;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_28
        if (i_rst == 1'b0) 
          begin
            s_reg_28 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_28 <= s_reg_30;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_29
        if (i_rst == 1'b0) 
          begin
            s_reg_29 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_29 <= s_reg_31;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_30
        if (i_rst == 1'b0) 
          begin
            s_reg_30 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_30 <= s_reg_32;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_31
        if (i_rst == 1'b0) 
          begin
            s_reg_31 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_31 <= s_reg_33;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_32
        if (i_rst == 1'b0) 
          begin
            s_reg_32 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_32 <= s_reg_34;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_33
        if (i_rst == 1'b0) 
          begin
            s_reg_33 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_33 <= s_reg_35;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_34
        if (i_rst == 1'b0) 
          begin
            s_reg_34 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_34 <= s_reg_36;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_35
        if (i_rst == 1'b0) 
          begin
            s_reg_35 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_35 <= s_reg_37;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_36
        if (i_rst == 1'b0) 
          begin
            s_reg_36 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_36 <= s_reg_38;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_37
        if (i_rst == 1'b0) 
          begin
            s_reg_37 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_37 <= s_reg_39;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_38
        if (i_rst == 1'b0) 
          begin
            s_reg_38 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_38 <= s_reg_40;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_39
        if (i_rst == 1'b0) 
          begin
            s_reg_39 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_39 <= s_reg_58;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_4
        if (i_rst == 1'b0) 
          begin
            s_reg_4 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_4 <= s_reg_6;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_40
        if (i_rst == 1'b0) 
          begin
            s_reg_40 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_40 <= s_reg_41;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_41
        if (i_rst == 1'b0) 
          begin
            s_reg_41 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_41 <= s_reg_44;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_42
        if (i_rst == 1'b0) 
          begin
            s_reg_42 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_42 <= s_reg_46;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_43
        if (i_rst == 1'b0) 
          begin
            s_reg_43 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_43 <= s_reg_42;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_44
        if (i_rst == 1'b0) 
          begin
            s_reg_44 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_44 <= s_reg_45;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_45
        if (i_rst == 1'b0) 
          begin
            s_reg_45 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_45 <= s_reg_47;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_46
        if (i_rst == 1'b0) 
          begin
            s_reg_46 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_46 <= s_reg_49;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_47
        if (i_rst == 1'b0) 
          begin
            s_reg_47 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_47 <= s_reg_55;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_48
        if (i_rst == 1'b0) 
          begin
            s_reg_48 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_48 <= s_reg_51;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_49
        if (i_rst == 1'b0) 
          begin
            s_reg_49 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_49 <= s_reg_57;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_5
        if (i_rst == 1'b0) 
          begin
            s_reg_5 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_5 <= s_reg_8;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_50
        if (i_rst == 1'b0) 
          begin
            s_reg_50 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd51: 
                      begin
                        s_reg_50 <= s_reg_146;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_51
        if (i_rst == 1'b0) 
          begin
            s_reg_51 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_51 <= s_reg_53;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_53
        if (i_rst == 1'b0) 
          begin
            s_reg_53 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_53 <= s_reg_66;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_55
        if (i_rst == 1'b0) 
          begin
            s_reg_55 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_55 <= s_reg_50;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_56
        if (i_rst == 1'b0) 
          begin
            s_reg_56 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_56 <= s_reg_10;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_57
        if (i_rst == 1'b0) 
          begin
            s_reg_57 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_57 <= s_reg_48;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_58
        if (i_rst == 1'b0) 
          begin
            s_reg_58 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_58 <= s_reg_43;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_59
        if (i_rst == 1'b0) 
          begin
            s_reg_59 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_59 <= s_reg_22;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_6
        if (i_rst == 1'b0) 
          begin
            s_reg_6 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_6 <= s_reg_56;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_60
        if (i_rst == 1'b0) 
          begin
            s_reg_60 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_60 <= s_reg_16;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_66
        if (i_rst == 1'b0) 
          begin
            s_reg_66 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd04, 6'd07, 6'd10, 6'd13, 6'd16, 6'd19, 6'd22, 6'd48, 6'd51: 
                      begin
                        s_reg_66 <= SobelFilter_Add_32Ux32U_32U_4_7_out1;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_31
    always @(posedge i_clk)
      begin : drive_s_reg_7_slice
        if (i_rst == 1'b0) 
          begin
            s_reg_7_slice <= 31'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_7_slice <= s_reg_4[30:0];
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_8
        if (i_rst == 1'b0) 
          begin
            s_reg_8 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_8 <= s_reg_11;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: regr_en_sc_32
    always @(posedge i_clk)
      begin : drive_s_reg_9
        if (i_rst == 1'b0) 
          begin
            s_reg_9 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    6'd00, 6'd51: 
                      begin
                        s_reg_9 <= s_reg_5;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_32bx27i0c
    always @(s_reg_10 or s_reg_14 or s_reg_15 or s_reg_19 or s_reg_20 or s_reg_21 or s_reg_22 or s_reg_25 or s_reg_26 or s_reg_27 or s_reg_28 or s_reg_29 or s_reg_31 or s_reg_32 or s_reg_33 or s_reg_34 or s_reg_35 or s_reg_37 or s_reg_38 or s_reg_4 or s_reg_40 or s_reg_43 or s_reg_44 or s_reg_45 or s_reg_50 or s_reg_56 or s_reg_59 or gs_ctrl_do_filter_h5ff416db6d8)
      begin : drive_SobelFilter_Mul_32Sx8S_32S_4_6_in2
        case (gs_ctrl_do_filter_h5ff416db6d8) 
          5'd01: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_56;
            end
          5'd02: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_10;
            end
          5'd03: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_14;
            end
          5'd04: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_15;
            end
          5'd05: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_20;
            end
          5'd06: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_21;
            end
          5'd07: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_26;
            end
          5'd08: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_28;
            end
          5'd09: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_32;
            end
          5'd10: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_34;
            end
          5'd11: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_38;
            end
          5'd12: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_40;
            end
          5'd13: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_44;
            end
          5'd14: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_45;
            end
          5'd15: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_50;
            end
          5'd16: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_19;
            end
          5'd17: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_59;
            end
          5'd18: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_22;
            end
          5'd19: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_25;
            end
          5'd20: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_27;
            end
          5'd21: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_29;
            end
          5'd22: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_31;
            end
          5'd23: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_33;
            end
          5'd24: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_35;
            end
          5'd25: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_37;
            end
          5'd26: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_43;
            end
          default: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in2 = s_reg_4;
            end
        endcase
      end
    
    // resource: mux_8bx11i11c
    always @(gs_ctrl_do_filter_h5ff402db6d0)
      begin : drive_SobelFilter_Mul_32Sx8S_32S_4_6_in1
        case (gs_ctrl_do_filter_h5ff402db6d0) 
          4'd01: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd253;
            end
          4'd02: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd005;
            end
          4'd03: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd251;
            end
          4'd04: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd010;
            end
          4'd05: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd243;
            end
          4'd06: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd071;
            end
          4'd07: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd244;
            end
          4'd08: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd237;
            end
          4'd09: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd232;
            end
          4'd10: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd102;
            end
          default: 
            begin
              SobelFilter_Mul_32Sx8S_32S_4_6_in1 = 8'd003;
            end
        endcase
      end
    
    // resource: SobelFilter_Mul_32Sx8S_32S_4  instance: SobelFilter_Mul_32Sx8S_32S_4_6
    assign SobelFilter_Mul_32Sx8S_32S_4_6_out1 = SobelFilter_Mul_32Sx8S_32S_4_6_in2 * {{ 24 {SobelFilter_Mul_32Sx8S_32S_4_6_in1[7]}}, SobelFilter_Mul_32Sx8S_32S_4_6_in1};
    
    // resource: mux_32bx13i0c
    always @(o_avg_data or s_reg_122[30:0] or s_reg_146[30:0] or s_reg_16[29:0] or s_reg_18[29:0] or s_reg_42[29:0] or s_reg_46[30:0] or s_reg_58[29:0] or s_reg_60[30:0] or s_reg_66 or SobelFilter_Mul_32Sx8S_32S_4_6_out1 or gs_ctrl_do_filter_h7fffffffffffe or s_reg_7_slice)
      begin : drive_SobelFilter_Add_32Ux32U_32U_4_7_in2
        case (gs_ctrl_do_filter_h7fffffffffffe) 
          4'd01: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_122[30:0], 1'b0};
            end
          4'd02: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = s_reg_66;
            end
          4'd03: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = SobelFilter_Mul_32Sx8S_32S_4_6_out1;
            end
          4'd04: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = o_avg_data;
            end
          4'd05: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_60[30:0], 1'b0};
            end
          4'd06: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_16[29:0], 2'd0};
            end
          4'd07: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_18[29:0], 2'd0};
            end
          4'd08: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_58[29:0], 2'd0};
            end
          4'd09: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_42[29:0], 2'd0};
            end
          4'd10: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_46[30:0], 1'b0};
            end
          4'd11: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_146[30:0], 1'b0};
            end
          4'd12: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_66[30:0], 1'b0};
            end
          default: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in2 = {s_reg_7_slice, 1'b0};
            end
        endcase
      end
    
    // resource: mux_32bx4i0c
    always @(o_avg_data or s_reg_122 or SobelFilter_Mul_32Sx8S_32S_4_6_out1 or SobelFilter_Minus_32S_32S_4_8_out1 or gs_ctrl_do_filter_h7fffffffffffe0)
      begin : drive_SobelFilter_Add_32Ux32U_32U_4_7_in1
        case (gs_ctrl_do_filter_h7fffffffffffe0) 
          2'd1: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in1 = SobelFilter_Minus_32S_32S_4_8_out1;
            end
          2'd2: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in1 = s_reg_122;
            end
          2'd3: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in1 = o_avg_data;
            end
          default: 
            begin
              SobelFilter_Add_32Ux32U_32U_4_7_in1 = SobelFilter_Mul_32Sx8S_32S_4_6_out1;
            end
        endcase
      end
    
    // resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_7
    assign SobelFilter_Add_32Ux32U_32U_4_7_out1 = SobelFilter_Add_32Ux32U_32U_4_7_in2 + SobelFilter_Add_32Ux32U_32U_4_7_in1;
    
    // resource: mux_32bx16i0c
    always @(s_reg_11 or s_reg_12 or s_reg_17 or s_reg_24 or s_reg_30 or s_reg_36 or s_reg_4[30:0] or s_reg_41 or s_reg_48[30:0] or s_reg_5[30:0] or s_reg_51[30:0] or s_reg_53 or s_reg_55[30:0] or s_reg_57 or s_reg_8[30:0] or s_reg_9 or gs_ctrl_do_filter_h2e0000e924924)
      begin : drive_SobelFilter_Minus_32S_32S_4_8_in1
        case (gs_ctrl_do_filter_h2e0000e924924) 
          4'd01: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_4[30:0], 1'b0};
            end
          4'd02: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_12;
            end
          4'd03: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_17;
            end
          4'd04: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_24;
            end
          4'd05: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_30;
            end
          4'd06: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_36;
            end
          4'd07: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_41;
            end
          4'd08: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_55[30:0], 1'b0};
            end
          4'd09: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_5[30:0], 1'b0};
            end
          4'd10: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_8[30:0], 1'b0};
            end
          4'd11: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_11;
            end
          4'd12: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_57;
            end
          4'd13: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_48[30:0], 1'b0};
            end
          4'd14: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = {s_reg_51[30:0], 1'b0};
            end
          4'd15: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_53;
            end
          default: 
            begin
              SobelFilter_Minus_32S_32S_4_8_in1 = s_reg_9;
            end
        endcase
      end
    
    // resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_8
    assign SobelFilter_Minus_32S_32S_4_8_out1 = -SobelFilter_Minus_32S_32S_4_8_in1;
    
    // resource: regr_en_sc_6
    always @(posedge i_clk)
      begin : drive_global_state
        if (i_rst == 1'b0) 
          begin
            global_state <= 6'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // resource: mux_6bx2i1c
    always @(global_state)
      begin : drive_global_state_next
        case (global_state) 
          6'd00, 6'd51: 
            begin
              global_state_next = 6'd01;
            end
          default: 
            begin
              global_state_next = global_state + 6'd01;
            end
        endcase
      end
    
    // resource: mux_5bx27i27c
    // resource: regr_en_sc_5
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h5ff416db6d8
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h5ff416db6d8 <= 5'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd03: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd01;
                      end
                    6'd04: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd02;
                      end
                    6'd06: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd03;
                      end
                    6'd07: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd04;
                      end
                    6'd09: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd05;
                      end
                    6'd10: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd06;
                      end
                    6'd12: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd07;
                      end
                    6'd13: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd08;
                      end
                    6'd15: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd09;
                      end
                    6'd16: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd10;
                      end
                    6'd18: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd11;
                      end
                    6'd19: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd12;
                      end
                    6'd21: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd13;
                      end
                    6'd22: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd14;
                      end
                    6'd24: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd15;
                      end
                    6'd30: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd16;
                      end
                    6'd32: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd17;
                      end
                    6'd33: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd18;
                      end
                    6'd34: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd19;
                      end
                    6'd35: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd20;
                      end
                    6'd36: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd21;
                      end
                    6'd37: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd22;
                      end
                    6'd38: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd23;
                      end
                    6'd39: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd24;
                      end
                    6'd40: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd25;
                      end
                    6'd42: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd26;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h5ff416db6d8 <= 5'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx11i11c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h5ff402db6d0
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h5ff402db6d0 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd04, 6'd21: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd01;
                      end
                    6'd06, 6'd19, 6'd30, 6'd42: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd02;
                      end
                    6'd07, 6'd18, 6'd32, 6'd40: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd03;
                      end
                    6'd09, 6'd16: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd04;
                      end
                    6'd10, 6'd15: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd05;
                      end
                    6'd12, 6'd13: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd06;
                      end
                    6'd33, 6'd39: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd07;
                      end
                    6'd34, 6'd38: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd08;
                      end
                    6'd35, 6'd37: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd09;
                      end
                    6'd36: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd10;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h5ff402db6d0 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx13i13c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h7fffffffffffe
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h7fffffffffffe <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd01: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd01;
                      end
                    6'd02, 6'd05, 6'd08, 6'd11, 6'd14, 6'd17, 6'd20, 6'd23: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd02;
                      end
                    6'd03, 6'd04, 6'd06, 6'd07, 6'd09, 6'd10, 6'd12, 6'd13, 6'd15, 6'd16, 6'd18, 6'd19, 6'd21, 6'd22, 6'd24, 6'd30, 6'd32, 6'd33, 6'd34, 6'd35, 6'd36, 6'd37, 6'd38, 6'd39, 6'd40, 6'd42: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd03;
                      end
                    6'd25, 6'd26, 6'd27, 6'd45, 6'd46, 6'd47, 6'd49: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd04;
                      end
                    6'd28: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd05;
                      end
                    6'd29: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd06;
                      end
                    6'd31: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd07;
                      end
                    6'd41: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd08;
                      end
                    6'd43: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd09;
                      end
                    6'd44: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd10;
                      end
                    6'd48: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd11;
                      end
                    6'd50: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd12;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_2bx4i4c
    // resource: regr_en_sc_2
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h7fffffffffffe0
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h7fffffffffffe0 <= 2'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd01, 6'd02, 6'd05, 6'd08, 6'd11, 6'd14, 6'd17, 6'd20, 6'd23, 6'd25, 6'd26, 6'd27, 6'd45, 6'd46, 6'd47, 6'd49: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe0 <= 2'd1;
                      end
                    6'd03, 6'd04, 6'd06, 6'd07, 6'd09, 6'd10, 6'd12, 6'd13, 6'd15, 6'd16, 6'd18, 6'd19, 6'd21, 6'd22, 6'd24, 6'd48, 6'd50: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe0 <= 2'd2;
                      end
                    6'd28, 6'd29, 6'd30, 6'd31, 6'd32, 6'd33, 6'd34, 6'd35, 6'd36, 6'd37, 6'd38, 6'd39, 6'd40, 6'd41, 6'd42, 6'd43, 6'd44: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe0 <= 2'd3;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h7fffffffffffe0 <= 2'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // resource: mux_4bx16i16c
    // resource: regr_en_sc_4
    always @(posedge i_clk)
      begin : drive_gs_ctrl_do_filter_h2e0000e924924
        if (i_rst == 1'b0) 
          begin
            gs_ctrl_do_filter_h2e0000e924924 <= 4'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    6'd02: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd01;
                      end
                    6'd05: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd02;
                      end
                    6'd08: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd03;
                      end
                    6'd11: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd04;
                      end
                    6'd14: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd05;
                      end
                    6'd17: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd06;
                      end
                    6'd20: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd07;
                      end
                    6'd23: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd08;
                      end
                    6'd25: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd09;
                      end
                    6'd26: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd10;
                      end
                    6'd27: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd11;
                      end
                    6'd45: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd12;
                      end
                    6'd46: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd13;
                      end
                    6'd47: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd14;
                      end
                    6'd49: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd15;
                      end
                    default: 
                      begin
                        gs_ctrl_do_filter_h2e0000e924924 <= 4'd00;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // instance: drive_i_rgb_busy
    assign i_rgb_busy = SobelFilter_gen_busy_r_4_102_out1[2];
    
    // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_102 (4 concurrent statements)
      assign SobelFilter_gen_busy_r_4_102_out1 = {SobelFilter_gen_busy_r_4_102_gnew_req, {SobelFilter_gen_busy_r_4_102_gdiv, SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next}};
      assign SobelFilter_gen_busy_r_4_102_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_102_gdiv;
      assign SobelFilter_gen_busy_r_4_102_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_102_gnew_req;
      assign SobelFilter_gen_busy_r_4_102_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);
    // (end of SobelFilter_gen_busy_r_4_102)
    
    // resource: regr_ss_1
    always @(posedge i_clk)
      begin : drive_i_rgb_m_unvalidated_req
        if (i_rst == 1'b0) 
          begin
            i_rgb_m_unvalidated_req <= 1'd1;
          end 
        else 
          begin
            i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_0_4_4_out1;
          end
      end
    
    // resource: SobelFilter_N_Muxb_1_2_0_4
    always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
      begin : SobelFilter_N_Muxb_1_2_0_4_4
        if (i_rgb_m_busy_req_0) 
          begin
            SobelFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_m_unvalidated_req;
          end 
        else 
          begin
            SobelFilter_N_Muxb_1_2_0_4_4_out1 = i_rgb_vld;
          end
      end
    
    // instance: drive_o_avg_vld
    assign o_avg_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;
    
    // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
    assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_avg_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_unacked_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_unacked_req <= 1'd0;
          end 
        else 
          begin
            o_avg_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_100_out1;
          end
      end
    
    // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_100
    assign SobelFilter_And_1Ux1U_1U_4_100_out1 = o_avg_busy & o_avg_vld;
    
    // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
    assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_avg_m_req_m_trig_req ^ o_avg_m_req_m_prev_trig_req;
    
    // resource: regr_sc_1
    always @(posedge i_clk)
      begin : drive_o_avg_m_req_m_prev_trig_req
        if (i_rst == 1'b0) 
          begin
            o_avg_m_req_m_prev_trig_req <= 1'd0;
          end 
        else 
          begin
            o_avg_m_req_m_prev_trig_req <= o_avg_m_req_m_trig_req;
          end
      end
    
    // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
    assign SobelFilter_Not_1U_1U_1_3_out1 = !o_avg_m_req_m_trig_req;

endmodule

